[tox]
envlist =
    check-{style,security,docs}
    py{38,39,310,311}-test{,-alldeps,-oldestdeps,-devdeps,-predeps}{,-cov}-xdist
    build-dist
requires =
    setuptools >= 30.3.0
    pip >= 19.3.1

[testenv]

# Pass through the following environemnt variables which are needed for the CI
pass_env = 
    HOME
    WINDIR
    CC
    CI

# Run the tests in a temporary directory to make sure that we don't import
# package from the source tree
change_dir = .tmp/{env_name}

# tox environments are constructued with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    alldeps: with all optional dependencies
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    cov: and test coverage
    xdist: using parallel processing
deps =

    # The oldestdeps factor is intended to be used to install the oldest versions of all
    # dependencies that have a minimum version.
    oldestdeps: minimum_dependencies

    # The devdeps factor is intended to be used to install the latest developer version
    # or nightly wheel of key dependencies.
    devdeps: git+https://github.com/astropy/specutils.git@main#egg=specutils

    cov: pytest-cov

    xdist: pytest-xdist
extras =
    test
    alldeps: all

commands_pre = 
    devdeps: pip install -U -i https://pypi.anaconda.org/astropy/simple astropy --pre
    pip freeze
    
commands =
    pytest --pyargs synphot {tox_root}/docs \
    cov: --cov synphot --cov-config {tox_root}/setup.cfg --cov-report xml --cov-report term-missing \
    xdist: -n auto \
    {posargs}

pip_pre =
    predeps: true
    !predeps: false
    
[testenv:check-style]
skip_install = true
changedir = {toxinidir}
description = check code style with flake8
deps = flake8
commands = flake8 synphot --count

[testenv:check-security]
skip_install = true
changedir = {tox_root}
description = Security audit with bandit
deps = 
    bandit
commands =
    bandit -r synphot -c .bandit.yaml

[testenv:check-docs]
change_dir = docs
description = check the links in the HTML docs
extras = 
    docs
allowlist_externals = 
    make
commands =
    make linkcheck

[testenv:build-dist]
skip_install = true
changedir = {toxinidir}
description = twine check dist tarball
deps =
    build
    twine>=3.3
commands =
    python -m build --sdist .
    twine check --strict dist/*
