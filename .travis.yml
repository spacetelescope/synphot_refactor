language: python

python:
    - 2.7
    - 3.6

os:
    - linux

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# The apt packages below are needed for sphinx builds. A full list of packages
# that can be included can be found here:
#
# https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise

addons:
    apt:
        packages:
            - graphviz
            - texlive-latex-extra
            - dvipng

env:
    global:
        # The following versions are the 'default' for tests, unless
        # overridden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - NUMPY_VERSION=stable
        - MAIN_CMD='python setup.py'
        - ASTROPY_VERSION=stable
        - SETUP_CMD='test'
        - PIP_DEPENDENCIES='pytest-remotedata pytest-doctestplus pytest-openfiles'
        # For this package-template, we include examples of Cython modules,
        # so Cython is required for testing. If your package does not include
        # Cython code, you can set CONDA_DEPENDENCIES=''
        #- CONDA_DEPENDENCIES='Cython'
        - CONDA_DEPENDENCIES='Cython jinja2 scipy pytest'
    matrix:
        # Make sure that egg_info works without dependencies
        - SETUP_CMD='egg_info'

matrix:
    include:

        # DELETE ME: astrofrog asked me to check this for debugging.
        - python 3.6
          env: ASTROPY_VERSION=development
               MAIN_CMD='python -c "from astropy.tests.command import AstropyTest"' SETUP_CMD=''

        # DISABLED FOR NOW
        # Check for sphinx doc build warnings - we do this first because it
        # may run for a long time
        #- python: 3.6
        #  env: SETUP_CMD='build_sphinx -w'

        # Do a coverage test in Python 3.
        - python: 3.6
          env: SETUP_CMD='test --coverage --open-files --remote-data'

        # Do a test in older Python 3.
        - python: 3.5
          env: SETUP_CMD='test --open-files'

        # Do a test in Python 2.
        - python: 2.7
          env: ASTROPY_VERSION=lts NUMPY_VERSION="1.15" SETUP_CMD='test --open-files'

        # Try Astropy development version
        - python: 3.6
          env: ASTROPY_VERSION=development

        # Do a PEP8 test with flake8
        - python: 3.6
          env: MAIN_CMD='flake8 synphot --count' SETUP_CMD=''

before_install:

    # If there are matplotlib tests, comment these out to
    # Make sure that interactive matplotlib backends work
    # - export DISPLAY=:99.0
    # - sh -e /etc/init.d/xvfb start

install:

    # We now use the ci-helpers package to set up our testing environment.
    # This is done by using Miniconda and then using conda and pip to install
    # dependencies. Which dependencies are installed using conda and pip is
    # determined by the CONDA_DEPDENDENCIES and PIP_DEPENDENCIES variables,
    # which should be space-delimited lists of package names. See the README
    # in https://github.com/astropy/ci-helpers for information about the full
    # list of environment variables that can be used to customize your
    # environment. In some cases, ci-helpers may not offer enough flexibility
    # in how to install a package, in which case you can have additional
    # commands in the install: section below.

    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda.sh

    # Upgrade to the latest version of pip to avoid it displaying warnings
    # about it being out of date.
    #- pip install --upgrade --no-deps pip

    # As described above, using ci-helpers, you should be able to set up an
    # environment with dependencies installed using conda and pip, but in some
    # cases this may not provide enough flexibility in how to install a
    # specific dependency (and it will not be able to install non-Python
    # dependencies). Therefore, you can also include commands below (as
    # well as at the start of the install section or in the before_install
    # section if they are needed before setting up conda) to install any
    # other dependencies.

script:
    - $MAIN_CMD $SETUP_CMD

after_success:
    # If coveralls.io is set up for this package, uncomment the line
    # below and replace "packagename" with the name of your package.
    # The coveragerc file may be customized as needed for your package.
    - if [[ $SETUP_CMD == *--coverage* ]]; then coveralls --rcfile='synphot/tests/coveragerc'; fi
