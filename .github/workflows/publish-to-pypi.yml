name: Release

on:
  workflow_dispatch:
  release:
    types: [released]
  pull_request:
    # We also want this workflow triggered if the 'Build wheels'
    # label is added or present when PR is updated
    types:
      - synchronize
      - labeled

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: (github.repository == 'spacetelescope/synphot_refactor' && ( github.event_name == 'release' || github.event_name == 'workflow_dispatch' || contains(github.event.pull_request.labels.*.name, 'Build wheels')))
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install pip "twine>=3.3" -U
    - name: Build wheels
      uses: pypa/cibuildwheel@v2.16.2
      env:
        CIBW_BUILD: 'cp39-* cp310-* cp311-* cp312-*'
        CIBW_SKIP: '*-musllinux_*'
        CIBW_ARCHS_LINUX: 'x86_64'
        CIBW_ARCHS_WINDOWS: 'AMD64'
        CIBW_ARCHS_MACOS: 'arm64'
        CIBW_TEST_SKIP: '*-macosx_arm64'
        CIBW_TEST_REQUIRES: 'pytest pytest-astropy'
        CIBW_TEST_COMMAND: 'python -c "import synphot; synphot.test()"'
    - name: Check wheels
      run: python -m twine check --strict wheelhouse/*
    # Upload artifacts because gh-action-pypi-publish Docker is only on Linux
    - name: Upload wheels
      if: github.event_name == 'release'
      uses: actions/upload-artifact@v4
      with:
        name: additional-pylons-${{ matrix.os }}
        path: ./wheelhouse/*.whl

  build_dist:
    name: Source dist
    runs-on: ubuntu-latest
    if: (github.repository == 'spacetelescope/synphot_refactor' && ( github.event_name == 'release' || github.event_name == 'workflow_dispatch' || contains(github.event.pull_request.labels.*.name, 'Build wheels')))
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: python -m pip install pip build "twine>=3.3" -U
    - name: Build package
      run: python -m build --sdist .
    - name: Check dist
      run: python -m twine check --strict dist/*
    - name: Test package
      run: |
        cd ..
        python -m venv testenv
        testenv/bin/pip install -U pip
        testenv/bin/pip install pytest pytest-astropy
        testenv/bin/pip install synphot_refactor/dist/*.tar.gz
        testenv/bin/python -c "import synphot; synphot.test()"
    - name: Upload dist
      if: github.event_name == 'release'
      uses: actions/upload-artifact@v4
      with:
        name: additional-pylons-dist
        path: ./dist/*.tar.gz

  publish:
    name: Publish to PyPI
    needs: [build_wheels, build_dist]
    if: github.repository == 'spacetelescope/synphot_refactor' && github.event_name == 'release'
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://pypi.org/p/synphot
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
    - name: Download wheels
      uses: actions/download-artifact@v4
      with:
        path: dist
        pattern: additional-pylons-*
        merge-multiple: true
    - name: Pylons inspection
      run: ls dist/*
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
