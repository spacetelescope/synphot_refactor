name: When Opened

on:
  issues:
    types:
    - opened
  pull_request_target:
    types:
    - opened

jobs:
  triage:
    runs-on: ubuntu-latest
    steps:
    - name: Label PR
      uses: actions/labeler@8558fd74291d67161a8a78ce36a881fa63b766a9  # v5.0.0
      if: github.event_name == 'pull_request_target'
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
    - name: 'Reviewer Checklist'
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea  # v7.0.1
      if: github.event_name == 'pull_request_target'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `Thank you for your contribution! ðŸŒŒ This checklist is meant to remind the package maintainers who will review this pull request of some common things to look for.

            - [ ] Do the proposed changes actually accomplish desired goals?
            - [ ] Do the proposed changes follow the [STScI coding guidelines](https://github.com/spacetelescope/style-guides/blob/master/guides/python.md)?
            - [ ] Are tests added/updated as required? If so, do they follow the [STScI testing guidelines](https://github.com/spacetelescope/style-guides/blob/master/guides/python-testing.md)?
            - [ ] Are docs added/updated as required?
            - [ ] Is rebase and/or squash necessary? If so, please provide the author with appropriate instructions.
            - [ ] Did the CI pass? If no, are the failures related?
            - [ ] Is a change log needed?`
          })
    - name: 'Comment Draft PR'
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea  # v7.0.1
      if: github.event.pull_request.draft == true
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸ‘‹ Thank you for your draft pull request! Do you know that you can use `[ci skip]` or `[skip ci]` in your commit messages to skip running continuous integration tests until you are ready?'
          })
    #- name: Special comment
    #  uses: pllim/action-special_pr_comment@5126c189c02418a55448480b28efd1a00af48d7b  # 0.2
    #  with:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
