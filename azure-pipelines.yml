# This is the CI matrix that runs per push event.

trigger:
- master

stages:
- stage: Initial
  jobs:
  - job: 'EggInfo'
    pool:
      vmImage: 'Ubuntu-16.04'

    steps:
    - task: UsePythonVersion@0

    # Make sure that egg_info works without dependencies
    - script: |
        python -m pip install --upgrade pip setuptools
        python setup.py egg_info
      displayName: 'egg_info'

  - job: 'PEP8'
    pool:
      vmImage: 'Ubuntu-16.04'

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'

    - script: |
        python -m pip install --upgrade pip setuptools
        pip install flake8
        flake8 synphot --count
      displayName: 'PEP 8 check'

  - template: azure-templates.yml

- stage: Comprehensive
  dependsOn: Initial
  condition: succeeded()
  jobs:
  - job: 'Coverage'
    pool:
      vmImage: 'Ubuntu-16.04'
    strategy:
      maxParallel: 4

    steps:
    - task: UsePythonVersion@0

    - script: |
        sudo apt-get install libxml2-utils
        python -m pip install --upgrade pip setuptools
        pip install numpy scipy astropy pytest-astropy codecov
        python setup.py test --coverage --open-files --remote-data
      displayName: 'Run tests'
      condition: not(contains(variables['Build.SourceVersionMessage'], '[docs only]'))

    - script: codecov -t $codecov_token
      env:
        codecov_token: $(CODECOV_TOKEN)
      displayName: 'Calculate coverage'
      condition: not(contains(variables['Build.SourceVersionMessage'], '[docs only]'))

  - template: azure-templates.yml
    parameters:
      name: 'LTS_Astropy'
      numpyCmd: 'pip install numpy==1.15.4'
      astropyCmd: 'pip install astropy==2.0.12'
      pythonVersion: '3.6'

  - template: azure-templates.yml
    parameters:
      name: 'Dev_Astropy'
      astropyCmd: 'pip install git+https://github.com/astropy/astropy.git@master#egg=astropy'

  - template: azure-templates.yml
    parameters:
      name: 'Windows'
      vmImage: 'vs2017-win2016'

  - template: azure-templates.yml
    parameters:
      name: 'OSX'
      vmImage: 'macOS-10.13'

  - job: 'Doc'
    pool:
      vmImage: 'Ubuntu-16.04'

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.6'

    - script: |
        sudo apt-get install graphviz
        python -m pip install --upgrade pip setuptools
        pip install numpy scipy matplotlib astropy sphinx-astropy
        python setup.py build_docs -w
      displayName: 'Doc build'
  # DEV NOTE:
  # Not very useful like this because I have to sign in with Microsoft account,
  # download a ZIP file, unzip on local disk, and then only I can preview the
  # HTML pages. Was hoping for direct preview by clicking URL like CircleCI.
  #
  #  - task: PublishPipelineArtifact@0
  #    inputs:
  #      artifactName: 'htmlDocs'
  #      targetPath: 'docs/_build/html'
